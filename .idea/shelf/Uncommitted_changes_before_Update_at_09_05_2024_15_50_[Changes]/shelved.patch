Index: src/main/java/Tui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\npublic class Tui {\r\n\r\n    private final Scanner sc = new Scanner(System.in);\r\n\r\n    public int mostrarMenu() {\r\n        System.out.println(\"1. Nova Partida\");\r\n        System.out.println(\"2. Carregar Partida\");\r\n        System.out.println(\"3. Configuració\");\r\n        System.out.println(\"4. Sortir\");\r\n        System.out.print(\"Escull una opció : \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public void mostrarTauller(char[][] taulell, int torn) {\r\n        System.out.println(\"Jugador\" + torn + \" : \" + (torn == 1 ? \"X\" : \"O\")); \r\n        for (int i = 0; i < taulell.length; i++) {\r\n            for (int j = 0; j < taulell[i].length; j++) {\r\n                System.out.print(taulell[i][j]);\r\n                if (j < taulell[i].length - 1) {\r\n                    System.out.print(\"|\");\r\n                }\r\n            }\r\n            System.out.println();\r\n            if (i < taulell.length - 1) {\r\n                System.out.println(\"-----\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public int[] recollirJugada(){\r\n        System.out.print(\"Introdueix la fila: \");\r\n        while (!sc.hasNextInt()) {\r\n            System.out.println(\"Introdueix un número entre 0 i 2\");\r\n            sc.next();\r\n        }\r\n        int fila = sc.nextInt();\r\n        while (fila < 0 || fila > 2) {\r\n            System.out.println(\"Introdueix un número entre 0 i 2\");\r\n            fila = sc.nextInt();\r\n        }\r\n        System.out.print(\"Introdueix la columna: \");\r\n        while (!sc.hasNextInt()) {\r\n            System.out.println(\"Introdueix un número entre 0 i 2\");\r\n            sc.next();\r\n        }\r\n        int columna = sc.nextInt();\r\n        while (columna < 0 || columna > 2) {\r\n            System.out.println(\"Introdueix un número entre 0 i 2\");\r\n            columna = sc.nextInt();\r\n        }\r\n        return new int[]{fila, columna};\r\n\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    public void fiDePartida(int guanyador) {\r\n        if (guanyador == 0) {\r\n            System.out.println(\"Empat!\");\r\n        } else {\r\n            if (guanyador == 1) {\r\n                guanyador = 2;\r\n            } else {\r\n                guanyador = 1;\r\n            }\r\n            System.out.println(\"Ha guanyat el jugador \" + guanyador);\r\n        }\r\n    }\r\n\r\n    public void Configuracio(){\r\n        throw new UnsupportedOperationException();\r\n    }\r\n\r\n    public void Sortir(){\r\n        throw new UnsupportedOperationException();\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Tui.java b/src/main/java/Tui.java
--- a/src/main/java/Tui.java	(revision 8b9a169d42c2b665973202216399335ea34e4e2f)
+++ b/src/main/java/Tui.java	(date 1715262442366)
@@ -1,3 +1,5 @@
+import java.io.FileWriter;
+import java.io.IOException;
 import java.util.Scanner;
 
 public class Tui {
@@ -9,23 +11,23 @@
         System.out.println("2. Carregar Partida");
         System.out.println("3. Configuració");
         System.out.println("4. Sortir");
-        System.out.print("Escull una opció : ");
+        System.out.print("Escull una opció: ");
         return sc.nextInt();
     }
 
     public void mostrarTauller(char[][] taulell, int torn) {
-        System.out.println("Jugador" + torn + " : " + (torn == 1 ? "X" : "O")); 
+        System.out.println("Jugador" + torn + " : " + (torn == 1 ? "X" : "O"));
+        System.out.println("-------------");
         for (int i = 0; i < taulell.length; i++) {
-            for (int j = 0; j < taulell[i].length; j++) {
-                System.out.print(taulell[i][j]);
-                if (j < taulell[i].length - 1) {
-                    System.out.print("|");
-                }
+            System.out.print("| ");
+            for (int j = 0; j < taulell[i].length; j++) {
+                System.out.print(taulell[i][j] + " | ");
+
             }
             System.out.println();
             if (i < taulell.length - 1) {
-                System.out.println("-----");
             }
+            System.out.println("-------------");
         }
     }
 
@@ -53,9 +55,9 @@
         return new int[]{fila, columna};
 
 
-        
+
 
-        
+
     }
 
     public void fiDePartida(int guanyador) {
@@ -71,15 +73,42 @@
         }
     }
 
-    public void Configuracio(){
-        throw new UnsupportedOperationException();
+    //metodo para guardar la configuracion en un archivo
+    public void Configuracio() {
+        int tamanoMostrador = 3; // Tamaño por defecto
+        System.out.println("Ingrese el nuevo tamaño del mostrador (mínimo 3, máximo 10):");
+        while (!sc.hasNextInt()) {
+            System.out.println("No es un numero !!");
+            sc.next();
+        }
+        tamanoMostrador = sc.nextInt();
+        while (tamanoMostrador < 3 || tamanoMostrador > 10) {
+            System.out.println("Introduzca un número entre 3 y 10");
+            tamanoMostrador = sc.nextInt();
+        }
+        guardarConfiguracion(tamanoMostrador);
     }
+
+
+    private void guardarConfiguracion(int tamanoMostrador) {
+        try {
+            FileWriter myWriter = new FileWriter("C://files/config.txt");
+            myWriter.write(String.valueOf(tamanoMostrador));
+            myWriter.close();
+        } catch (IOException e) {
+            System.out.println("An error occurred.");
+            e.printStackTrace();
+        }
+    }
+
+
+
 
     public void Sortir(){
         throw new UnsupportedOperationException();
     }
 
-    
+
 
 
-}
+}
\ No newline at end of file
Index: src/main/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Main {\r\n    public static void main(String[] args) {\r\n        \r\n        Tui tui = new Tui();\r\n        Joc joc = new Joc();\r\n\r\n        int opcio = tui.mostrarMenu();\r\n\r\n\r\n            switch (opcio){\r\n                case 1:\r\n                    joc.novaPartida();\r\n                    opcio1(joc, tui);\r\n                    break;\r\n                case 2:\r\n                    joc.CarregarPartida();\r\n                    /*\r\n                    opcio2(joc, tui);\r\n                     */\r\n                    break;\r\n                case 3:\r\n                    tui.Configuracio();\r\n                    break;\r\n                case 4:\r\n                    tui.Sortir();\r\n                    break;\r\n                default :\r\n                    System.out.println(\"Opció incorrecta\");\r\n                    break;\r\n            }\r\n            \r\n\r\n}\r\n\r\n    private static void opcio1(Joc joc, Tui tui) {\r\n        boolean guanyador = false;\r\n        int[] jugada;\r\n        while (!guanyador) {\r\n            tui.mostrarTauller(joc.getTaulell(), joc.getTorn());\r\n            jugada = tui.recollirJugada();\r\n            joc.jugar(jugada[0], jugada[1]);\r\n            if (joc.jugadaGuanyadora(jugada[0], jugada[1])) {\r\n                guanyador = true;\r\n                tui.mostrarTauller(joc.getTaulell(), joc.getTorn());\r\n                tui.fiDePartida(joc.getTorn());\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
--- a/src/main/java/Main.java	(revision 8b9a169d42c2b665973202216399335ea34e4e2f)
+++ b/src/main/java/Main.java	(date 1715261969209)
@@ -20,6 +20,9 @@
                     break;
                 case 3:
                     tui.Configuracio();
+                    tui.mostrarMenu();
+                    joc.novaPartida();
+                    opcio1(joc, tui);
                     break;
                 case 4:
                     tui.Sortir();
